#!/usr/bin/env python
##Import stuff
import sys, pygal, math, re, pickle
'''
    Take data from a pickle jar that was generated by excercise2-collector.py and make a pretty graph

    Logic:
    #Import the samples
    #graph in/out octets for fa4
    #graph in/out packets for fa4
'''

def drawGraph(title, x_labels, y1_name, y1_data, y2_name, y2_data, filename):
    line_chart = pygal.Line()
    line_chart.title = title
    line_chart.x_labels = x_labels
    line_chart.add(y1_name, y1_data)
    line_chart.add(y2_name, y2_data)
    line_chart.render_to_file(filename)

def main():
    picklejar = "pynet-rtr1.twb-tech.com.fa4.pkl"
    #Read in any existing objects from the pickle jar
    try:
        f = open(picklejar, "rb")
        samples = pickle.load(f)
        f.close()
    except:
        samples = []
        print "Couldn't open pickle jar.  Quitting."
        sys.exit(-1)
    #work through each sample, and build in/out octets/packets lists.  Pretty sure this isn't the easiest way to do this, but don't know what is better.
    x_labels = []
    fa4_in_octets = []
    fa4_out_octets = []
    fa4_in_packets = []
    fa4_out_packets = []
    timestamps = []
    #find a list of timestamps
    for sample in samples:
        timestamps.append(sample['timestamp'])
    base_timestamp = min(timestamps)
    for timestamp in timestamps:
        this_sample = (sample for sample in samples if sample["timestamp"] == timestamp).next()
        x_label = re.sub('\.[0-9]*$', '', str(math.ceil((this_sample['timestamp'] - base_timestamp)/60)))
        x_labels.append(x_label)
        fa4_in_octets.append(int(this_sample['ifInOctets_fa4']))
        fa4_out_octets.append(int(this_sample['ifOutOctets_fa4']))
        fa4_in_packets.append(int(this_sample['ifInUcastPkts_fa4']))
        fa4_out_packets.append(int(this_sample['ifOutUcastPkts_fa4']))
    #Build Octets Graph
    ## Title data is in the file, but is static for now.  If/when we store multiple devices in the pickle jar, we need to extract the title data, and add an outer loop to iterate through all devices
    drawGraph(title='Fa4 In/Out Octets on pynet-rtr2', x_labels=x_labels, y1_name='In Bytes', y1_data=fa4_in_octets, y2_name='Out Bytes', y2_data=fa4_out_octets, filename='pynet-rtr_fa4_bytes.svg')
    drawGraph(title='Fa4 In/Out Packets on pynet-rtr2', x_labels=x_labels, y1_name='In Packets', y1_data=fa4_in_packets, y2_name='Out Packets', y2_data=fa4_out_packets, filename='pynet-rtr_fa4_packets.svg')
     
##Only run if not called by another file/program
if __name__ == "__main__":
    main()


